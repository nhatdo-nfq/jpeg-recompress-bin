language: node_js
node_js:
  # - '14'
  - '12'
  # - '10'
os:
  - linux
  - windows
  - osx
before_install:
  - | 
      case $TRAVIS_OS_NAME in
        windows)
          choco install -y nasm
          echo "Compiling Zlib"
          git clone https://github.com/madler/zlib.git $HOME/zlib
          cd $HOME/zlib
          cmake -G"MSYS Makefiles" -DCMAKE_MAKE_PROGRAM="/c/ProgramData/chocolatey/bin/mingw32-make.exe" -DCMAKE_C_COMPILER='/c/ProgramData/chocolatey/bin/x86_64-w64-mingw32-gcc.exe'  -DCMAKE_AR="/c/ProgramData/chocolatey/bin/ar.exe" .
          /c/ProgramData/chocolatey/bin/mingw32-make.exe
          /c/ProgramData/chocolatey/bin/mingw32-make.exe test
          cd ..
          echo "Compiling Libpng"
          git clone https://github.com/glennrp/libpng $HOME/libpng
          cd $HOME/libpng
          cmake -G"MSYS Makefiles" -DCMAKE_MAKE_PROGRAM="/c/ProgramData/chocolatey/bin/mingw32-make.exe" -DCMAKE_C_COMPILER='/c/ProgramData/chocolatey/bin/x86_64-w64-mingw32-gcc.exe'  -DCMAKE_AR="/c/ProgramData/chocolatey/bin/ar.exe" -DZLIB_LIBRARY="$HOME/zlib/libzlib.dll.a" -DZLIB_INCLUDE_DIR="$HOME/zlib" .
          /c/ProgramData/chocolatey/bin/mingw32-make.exe
          cp scripts/pnglibconf.h.prebuilt pnglibconf.h
          cp scripts/makefile.msys makefile
          /c/ProgramData/chocolatey/bin/mingw32-make.exe test
          cd ..
          echo "Compiling Mozjpeg"
          git clone https://github.com/mozilla/mozjpeg.git $HOME/mozjpeg
          cd $HOME/mozjpeg
          cmake -G"MSYS Makefiles" -DCMAKE_MAKE_PROGRAM="/c/ProgramData/chocolatey/bin/mingw32-make.exe" -DCMAKE_C_COMPILER='/c/ProgramData/chocolatey/bin/x86_64-w64-mingw32-gcc.exe' -DZLIB_LIBRARY="$HOME/zlib/libzlib.dll.a" -DZLIB_INCLUDE_DIR="$HOME/zlib" -DPNG_LIBRARY="$HOME/libpng/libpng16.a" -DPNG_PNG_INCLUDE_DIR="$HOME/libpng" -DCMAKE_AR="/c/ProgramData/chocolatey/bin/ar.exe" -DWITH_JPEG8=1 .
          /c/ProgramData/chocolatey/bin/mingw32-make.exe
          echo "Compiling Jpeg Archive"
          git clone https://github.com/danielgtaylor/jpeg-archive.git $HOME/jpeg-archive
          cd $HOME/jpeg-archive
          CC='/c/ProgramData/chocolatey/bin/x86_64-w64-mingw32-gcc.exe' /c/ProgramData/chocolatey/bin/mingw32-make.exe
          ./jpeg-recompress.exe --version
        ;;
        osx)
          brew install mozjpeg
          echo "Compiling Jpeg Archive"
          git clone https://github.com/danielgtaylor/jpeg-archive.git $HOME/jpeg-archive
          cd $HOME/jpeg-archive
          CC=gcc make
          CC=gcc make test
          ./jpeg-recompress --version
        ;;
        linux)
          echo "Building for Linux"
          sudo apt-get install -y cmake git nasm
          echo "Compiling Zlib"
          git clone https://github.com/madler/zlib.git $HOME/zlib
          cd $HOME/zlib
          cmake -G"Unix Makefiles"
          make
          make test 
          sudo make install
          cd ..
          echo "Compiling Libpng"
          git clone https://github.com/glennrp/libpng $HOME/libpng
          cd $HOME/libpng
          ./configure
          cmake -G"Unix Makefiles" .
          make
          cp scripts/pnglibconf.h.prebuilt pnglibconf.h
          cp scripts/makefile.linux makefile
          make test
          sudo make install
          echo "Compiling Mozjpeg"
          git clone https://github.com/mozilla/mozjpeg.git $HOME/mozjpeg
          cd $HOME/mozjpeg
          mkdir build 
          cd build 
          cmake -G"Unix Makefiles" -DPNG_SUPPORTED=TRUE -DWITH_JPEG8=1 ../ 
          make SHARED=0 CC='gcc -static' 
          sudo make install
          echo "Compiling Jpeg Archive"
          git clone https://github.com/danielgtaylor/jpeg-archive.git $HOME/jpeg-archive
          cd $HOME/jpeg-archive
          CC=gcc make
          CC=gcc make test
          ./jpeg-recompress --version
        ;;
      esac
compiler:
    - gcc
script:
  - echo "Completed!!!"
before_deploy:
  - export TRAVIS_TAG="$TRAVIS_BUILD_NUMBER"
  - git config --local user.name "$USER_NAME"
  - git config --local user.email "$USER_EMAIL"
  # - git tag "$TRAVIS_TAG" "$TRAVIS_COMMIT"
  - echo $TRAVIS_BRANCH
deploy:
    provider: releases
    tag_name: $TRAVIS_TAG
    target_commitish: $TRAVIS_COMMIT
    name: $TRAVIS_TAG
    overwrite: true
    skip_cleanup: true
    api_key: $github_token
    file_glob: true
    file:
        - $HOME/jpeg-archive/(jpeg-recompress|jpeg-recompress.exe)
    on:
        all_branches: true
        condiion: $TRAVIS_BRANCH =~ ^(.*)-release$
        repo: nhatdo-nfq/jpeg-recompress-bin